/*
Ques1- Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well. You must not use any built-in exponent function or operator. 

 Example 1:
Input: x = 4 Output: 2 Explanation: The square root of 4 is 2, so we return 2.
Example 2:

Input: x = 8 Output: 2 Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.
Constraints:

0 <= x <= 231 - 1
*/

public class SquareRoot {
    public static int mySqrt(int x) {
        if (x == 0 || x == 1) {
            return x;
        }
        
        long start = 1;
        long end = x;
        long ans = 0;
        
        while (start <= end) {
            long mid = (start + end) / 2;
            
            if (mid * mid == x) {
                return (int) mid;
            }
            
            if (mid * mid < x) {
                start = mid + 1;
                ans = mid;
            } else {
                end = mid - 1;
            }
        }
        
        return (int) ans;
    }
    
    public static void main(String[] args) {
        int x = 8;
        int result = mySqrt(x);
        System.out.println("Square root of " + x + " is " + result);
    }
}

/*
Output-
Square root of 4 is 2
Square root of 8 is 2
*/
