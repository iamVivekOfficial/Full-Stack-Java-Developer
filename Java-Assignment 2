

// Ques 2. WAP to sort an array using Quick Sort Algorithm.

import java.util.Scanner;
class QuickSort{
    void swap(int[] ar, int i, int j)
       {
           int tempVar = ar[i];
           ar[i] = ar[j];
           ar[j] = tempVar;
       }
    int partition(int ar[] ,int pivot, int high, int low) {
        int i = (low - 1);
         
           for (int j = low; j <= high - 1; j++) {
     
               // If the current element is smaller
               // than the pivot then we need to move it to left hence we will use "i" for that
               if (ar[j] < pivot) {
                   // Incrementing index of
                   // smaller element
                   i++;
                   swap(ar, i, j);
               }
           }
           swap(ar, i + 1, high);
           return (i + 1);
    }
    void quickSortArray(int[] ar,int low,int high) {
        if (low < high) {
             
               // here pi is partitioning index
               int pi = partition(ar,ar[high],high,low);
     
               // Individually sorting the elements before
               // partition and after partition
               quickSortArray(ar, low, pi - 1);
               quickSortArray(ar, pi + 1, high);
           }
        
        
    }
}

class QuesTwo {

   public static void main(String[] args) {
       Scanner scan=new Scanner(System.in);
         System.out.println("Enter size of Array :");
         int num =scan.nextInt();
         
         int[] ar = new int[num];
         //Storing the value of array
         System.out.println("Enter the values of Array :");
         for(int i=0;i<num;i++)
             ar[i]=scan.nextInt();
             
         // Here "QS" is the object of QuickSort   
         QuickSort QS=new QuickSort();
         QS.quickSortArray(ar,0,num-1);
         
         //Printing the array
         System.out.println("The Sorted Array are");
         for(int element:ar)
             System.out.print(element+" ");
   }
}



//Output

/*
Enter size of Array :
5
Enter the values of Array :10 30 20 90 5
The Sorted Array are
5 10 20 30 90 
*/


// Ques 3. WAP to sort an array using Bubble Sort Algorithm.

import java.util.Scanner;
class BubbleSort
{
    void swap(int[] ar,int j)
    {
           int temp = ar[j];
           ar[j] = ar[j+1];
           ar[j+1] = temp;
    }
    void BSArray(int[] ar,int num) 
    {
		 for (int i=0; i<num-1; i++)
	            for (int j = 0; j<num-i-1; j++)
	                if (ar[j] > ar[j+1])
	                  swap(ar,j);
    }
}

class QuesThree {

   public static void main(String[] args) {
       Scanner scan=new Scanner(System.in);
         System.out.println("Enter size of Array :");
         int num =scan.nextInt();
         
         int[] ar = new int[num];
         //Storing the value of array
         System.out.println("Enter the values of Array :");
         for(int i=0;i<num;i++)
             ar[i]=scan.nextInt();
             
         // Here "BS" is the object of BubbleSort   
         BubbleSort BS=new BubbleSort();
         BS.BSArray(ar,num);
         
         //Printing the array
         System.out.println("The Sorted Array are : ");
         for(int element:ar)
             System.out.print(element+" ");
   }
}

//Output

/*
Enter size of Array :
5
Enter the values of Array :
90 80 100 290 55
The Sorted Array are : 
55 80 90 100 290 
*/


//Ques 4. WAP to sort an array using Merge Sort Algorithm.

import java.util.Scanner;
class MergeSort 
{
	public static void sort(int ar[],int start,int end)
	{
		if(start>=end)
			return;
		
		int mid =start+(end-start)/2;
		sort(ar,start,mid);
		sort(ar,mid+1,end);
		merge(ar,start,mid,end);
	}
	public static void merge(int ar[],int start,int mid,int end)
	{
		int merged[]= new int[end-start+1];
		int index1=start;
		int index2=mid+1;
		int x=0;
		
		while(index1<=mid && index2<=end)
		{
			if(ar[index1]<=ar[index2])
				merged[x++]=ar[index1++];
			else
				merged[x++]=ar[index2++];
		}
		
		while(index1<=mid)
		{
			merged[x++]=ar[index1++];
		}
		while(index2<=end)
		{
			merged[x++]=ar[index2++];
		}
		
		for(int i=0,j=start;i<merged.length;i++,j++)
		{		
			ar[j]=merged[i];
		}
	}
	

}
class QuesFour {

   public static void main(String[] args) {
       Scanner scan=new Scanner(System.in);
         System.out.println("Enter size of Array :");
         int num =scan.nextInt();
         
         int[] ar = new int[num];
         //Storing the value of array
         System.out.println("Enter the values of Array :");
         for(int i=0;i<num;i++)
             ar[i]=scan.nextInt();
             
         // Here "MS" is the object of MergeSort   
         MergeSort MS=new MergeSort();
         MS.sort(ar,0,num-1);
         
         //Printing the array
         System.out.println("The Sorted Array are : ");
         for(int element:ar)
             System.out.print(element+" ");
   }
}

//Output
/*
Enter size of Array :
5
Enter the values of Array :10 20 67 90 36
The Sorted Array are : 
10 20 36 67 90 
*/



//Ques 5. WAP to sort an array using Selection Sort Algorithm.

import java.util.Scanner;
class SelectionSort
{   // Swap the found minimum element with the first element
    void swap(int[] ar, int min_idx, int i)
       {
           int temp = ar[min_idx];
			ar[min_idx] = ar[i];
			ar[i] = temp;
       }
	void sort(int ar[])
	{
		int n = ar.length;
		// One by one move boundary of unsorted subarray
		for (int i = 0; i < n-1; i++)
		{
			// Find the minimum element in unsorted array
			int min_idx = i;
			for (int j = i+1; j < n; j++)
				if (ar[j] < ar[min_idx])
					min_idx = j;
			// Calling the "swap" function
			swap(ar,min_idx,i);
		}
	}
}

class QuesFive {

   public static void main(String[] args) {
       Scanner scan=new Scanner(System.in);
         System.out.println("Enter size of Array :");
         int num =scan.nextInt();
         
         int[] ar = new int[num];
         //Storing the value of array
         System.out.println("Enter the values of Array :");
         for(int i=0;i<num;i++)
             ar[i]=scan.nextInt();
             
         // Here "SS" is the object of SelectionSort   
         SelectionSort SS = new SelectionSort();
         SS.sort(ar);
         
         //Printing the array
         System.out.println("The Sorted Array are : ");
         for(int element:ar)
             System.out.print(element+" ");
   }
}

//Output
/*
Enter size of Array :
5
Enter the values of Array :
89 87 76 50 12
The Sorted Array are : 
12 50 76 87 89 
*/
