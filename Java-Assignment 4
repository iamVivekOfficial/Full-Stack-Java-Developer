//Ques 1. WAP to remove Duplicates from a String.(Take any String ex with duplicates character)

import java.util.*;
public class RemoveDuplicates {
    public static void main(String[] args)
    {   
        String str = "aaabaababbccbccd";
        char s[]=str.toCharArray();
        System.out.println("String with Duplicate characters : "+str);
        String ans="";
        int i,j;
        for(i=0;i<s.length;i++){
            for(j=0;j<i;j++){
                if(s[i]==s[j]){
                    break;    
                }
            }
            if(j==i){          
                ans+=s[i];      
            }                  
        }
        System.out.println();
        System.out.print("String without Duplicate characters : "+ans);
    }
}

//Output

/*
String with Duplicate characters : aaabaababbccbccd
String without Duplicate characters : abcd
*/




//Ques 2. WAP to print Duplicates characters from the String.

import java.util.*;
public class DuplicateCharacters {  
    public static void main(String[] args) {  
       String str = "aaabaababbccbccd";
       System.out.println("Given string: "+str);
       int count;   
       char s[] = str.toCharArray();  
         
       System.out.print("Duplicate characters in a given string: ");    
       for(int i = 0; i <s.length; i++) {  
           count = 1;  
           for(int j = i+1; j <s.length; j++) {  
               if(s[i] == s[j] && s[i] != ' ') {  
                   count++;   
                   s[j] = '0';  
               }  
           }  
           if(count > 1 && s[i] != '0')  
               System.out.print(s[i]);  
       }  
   }  
}  




//Output

/*
Given string: aaabaababbccbccd
Duplicate characters in a given string: abc
*/




//Ques 3. WAP to check if “2552” is palindrome or not.

import java.util.*;

public class CheckPalindrome
{
	static int reverseDigits(int n)
	{
		int reverse_num = 0;
		while (n > 0) {
			reverse_num = reverse_num * 10 + n % 10;
			n = n / 10;
		}
		return reverse_num;
	}
	
	static int isPalindrome(int n)
	{
		int reverse_num = reverseDigits(n);
		if (reverse_num == n)
			return 1;
		else
			return 0;
	}
	public static void main(String []args)
	{
		int n = 2552;
		System.out.println( n  + (isPalindrome(n) == 1 ? " is a Palindrome number " : " is not a Palindrome number "));

	}

}

//Output

/*

2552 is a Palindrome number 

*/
