/*Ques- Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
*/

package Solutions;

import java.util.Scanner;

public class question1 {
    public static void moveZeros(int[] nums) {
        int index = 0;

        // Move all non-zero elements to the front of the array
        for (int num : nums) {
            if (num != 0) {
                nums[index] = num;
                index++;
            }
        }

        // Fill the remaining positions with zeros
        while (index < nums.length) {
            nums[index] = 0;
            index++;
        }
    }

    public static void main(String[] args) {
        

        Scanner sc=new Scanner(System.in);
    	int n=0;
    	System.out.println("Enter first array size");
    	n=sc.nextInt();
    	int[] nums = new int[n];
	      System.out.println("Enter first array values");
	      for(int i=0;i<n;i++) {
	    	  nums[i]=sc.nextInt();
	      }
        
        
        System.out.println("Original Array: ");
        for (int num : nums) {
            System.out.print(num + " ");
        }

        moveZeros(nums);

        System.out.println("\nArray after moving zeros to the end: ");
        for (int num : nums) {
            System.out.print(num + " ");
        }
        sc.close();
    }
}

/*
Enter first array size
11
Enter first array values
9 0 7 0 0 8 0 6 5 0 4
Original Array: 
9 0 7 0 0 8 0 6 5 0 4 
Array after moving zeros to the end: 
9 7 8 6 5 4 0 0 0 0 0 
*/
